-- @path Process=/Activity2PN/metamodels/Activities.ecore
-- @path PN=/Activity2PN/metamodels/PetriNets.ecore

module Process2PN;
create OUT : PN from IN : Process;

rule addTransitions ( s : PN!Transition) {
	using {
		net : PN!Net = thisModule.resolveTemp(Process!Process.allInstances()->first(), 'n');
	}
	do {
		net.transitions <- s;
	}
}

rule Process2Net {
	from p : Process!Process
	to n : PN!Net (
		places <- p.tasks
	)
}

rule Task2Place {
	from t : Process!Task
	to p : PN!Place (
		name <- t.name,
		tokens <- if t.oclIsKindOf(Process!Task) then 1 else 0 endif
	)
}

rule next2Transition {
	from t1 : Process!Task,
	     t2 : Process!Task(t1.next->includes(t2))
	to tr : PN!Transition (
		inps <- t1,
		outs <- t2
	)
	do {
	   thisModule.addTransitions(tr);	
	}
}