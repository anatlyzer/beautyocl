@namespace(uri="http://beautyocl/superimposed", prefix="superimposed")
package superimposed;

abstract class OclExpression {

}

class VariableDeclaration {
	attr String[1] name;
    val OclExpression[0..1] initExpression;
    ref OclType[1] type;
}

class VariableExp extends OclExpression {
	ref VariableDeclaration[1] varDcl;
}


class LetExp extends OclExpression {
    val VariableDeclaration[1] variable;
    val OclExpression[1] in_;
}

class OperationCallExp extends PropertyCallExp {
	attr String[1] name;	

	val OclExpression[*] arguments;	
}

class NavigationCallExp extends PropertyCallExp {
	attr String[1] name;	
}

class IfExp extends OclExpression {
  val OclExpression[1] thenExpression;
  val OclExpression[1] condition;
  val OclExpression[1] elseExpression;
}

abstract class OperatorCallExp extends OclExpression {
	attr String[1] name;	
}

class BinaryOperatorCallExp extends OperatorCallExp {
	val OclExpression[1] source;
	val OclExpression[1] argument;
}

class UnaryOperatorCallExp extends OperatorCallExp {
	val OclExpression[1] source;	
}


abstract class PropertyCallExp extends OclExpression {
	val OclExpression[1] source;
}
  
abstract class LoopExp extends PropertyCallExp {
	val OclExpression[1]#loopExp body;
	/* !ordered val Iterator[+]#loopExpr iterators; */
}

/*
class IterateExp extends LoopExp {
	val VariableDeclaration[1]#baseExp result;
}
*/

class IteratorExp extends LoopExp {
	attr String[1] name;
	val Iterator[1] iteratorVar;
}

class Iterator extends VariableDeclaration {
	
}

/* Literals (similar to ATL/OCL) */

abstract class PrimitiveExp extends OclExpression {
}

class StringExp extends PrimitiveExp {
  attr String[1] stringSymbol;
}

class BooleanExp extends PrimitiveExp {
  attr Boolean[1] booleanSymbol;
}

abstract class NumericExp extends PrimitiveExp {
}

class RealExp extends NumericExp {
  attr Double[1] realSymbol;
}

class IntegerExp extends NumericExp {
  attr Integer[1] integerSymbol;
}

class OclType extends OclExpression {
	
}

class OclModelElement extends OclType {
	@optional
	ref OclModel[1] model;
	attr String[1] name;	
}

class OclModel {
	attr String[1] name;
}