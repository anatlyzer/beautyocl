@namespace(uri="http://beautyocl/typing", prefix="typing")
package typ;

import "platform:/resource/beautyocl.catalogue.simplifications/metamodels/superimposed.ecore";

@singleton
class ExprTyping {
  op boolean isSameType(superimposed.OclExpression e1, superimposed.OclExpression e2);
  op boolean isSuperType(superimposed.OclExpression e1_subtype, superimposed.OclExpression e2_supertype);

  op boolean isNonNull(superimposed.OclExpression e);

  op CClass accessType(superimposed.PropertyCallExp exp);
  op String modelName(superimposed.VariableDeclaration exp);
  op CType typeOf(superimposed.OclExpression e);
}

abstract class CType {
}

class CClass extends CType {
  attr String[1] name;
  attr boolean[1] ~abstract;
  ref CClass[*] superClasses;

	// Could be computed by the template, but also given here as an optimization
  ref CClass[*] allSuperClasses;
}

class CDataType extends CType {
}

