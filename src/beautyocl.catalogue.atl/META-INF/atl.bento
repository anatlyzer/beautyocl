composite component beautyocl.atl {
	// uses "bento:/beautyocl.simplifications.integer"
	
	// Literals
	uses "platform:/resource/beautyocl.catalogue.simplifications/META-INF/simplification_integers.bento"
	uses "platform:/resource/beautyocl.catalogue.simplifications/META-INF/simplification_booleans.bento"
	// Type comparisons
	uses "platform:/resource/beautyocl.catalogue.simplifications/META-INF/simplification_if_kind_of.bento"
	uses "platform:/resource/beautyocl.catalogue.simplifications/META-INF/simplify_full_type_comparison.bento"
	// Iterators
	uses "platform:/resource/beautyocl.catalogue.simplifications/META-INF/simplification_remove_iterator.bento"
	                          
	binding bindTyping    = "typing2atl.gbind"
	binding bindAll    = "superimposed2atl.gbind"
	binding bindAllTgt    = "superimposed2atl_tgt.gbind"
			
	source concept ATLs : "ATLStatic.ecore"
	source concept TYPW : "typing_wrapper.ecore"
	target concept ATLt : "ATLStatic.ecore"
	target concept ACT : "platform:/resource/beautyocl.actions/model/actions.ecore"
	
	source model in  : ATLs
	source model in2  : TYPW  
	target model out : ATLt
	target model act : ACT
	
	compose seq  
		apply booleans(bindAll(in)) -> (act, bindAllTgt(out))
		apply integers(bindAll(in)) -> (act, bindAllTgt(out))
		apply iterator(bindAll(in)) -> (act, bindAllTgt(out))
		
		// apply ifKindOf(bindKindOf(in), bindTyping(in2)) -> (act)
		apply fullTypeComparison(bindAll(in), bindTyping(in2)) -> (act, bindAllTgt(out))
		// apply fullTypeComparison(in, bindTyping(in2)) -> (act, out)
		
}

